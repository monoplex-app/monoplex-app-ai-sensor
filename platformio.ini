; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32-s3-devkitc-1]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino

; --- 시리얼 모니터 속도 ---
monitor_speed = 115200

; --- 업로드 옵션 ---
upload_speed = 921600      ; 필요시 안정적인 속도(예: 115200)로 변경

; --- 라이브러리 의존성 (매우 중요!) ---
; 여기에 프로젝트에서 사용하는 라이브러리들을 추가합니다.
; 형식: 라이브러리_이름 또는 GitHub_주소 또는 ID
lib_deps =
    ArduinoJson             ; Benoit Blanchon의 ArduinoJson
    PubSubClient            ; Nick O'Leary의 PubSubClient
    ; WiFi, BLEDevice, LittleFS, Preferences 등은 ESP32 Arduino 프레임워크에 기본 포함되어 있어
    ; 보통 명시적으로 추가할 필요가 없습니다. 하지만 문제가 발생하면 추가해 볼 수 있습니다.
    ; espressif/BLEDevice   ; 예시 (보통 필요 없음)

; --- 파일 시스템 설정 (매우 중요!) ---
board_build.filesystem = littlefs  ; 사용할 파일 시스템 유형을 littlefs로 지정

; --- 파티션 구성 ---
; ESP32-S3의 경우, 기본 파티션 구성이 LittleFS를 지원하거나,
; 특정 파티션 파일을 지정할 수 있습니다.
; "No OTA (2MB APP/2MB SPIFFS)"와 유사한 구성을 사용하고 싶다면,
; 해당 구성의 CSV 파일 이름을 찾거나, 기본값을 사용합니다.
; 만약 "No OTA (2MB APP/2MB LittleFS)"와 같은 옵션이 있다면 그것을 사용합니다.
; 예시: board_build.partitions = no_ota_2m_2m_littlefs.csv
; (만약 특별한 파티션 파일이 없다면, 이 라인을 생략하고 기본 파티션 구성에
;  LittleFS를 포맷하여 사용합니다. 코드에서 LittleFS.format() 호출)
; 현재 사용 중인 "No OTA (2MB APP/2MB SPIFFS)" 이름의 파티션 구성은
; board_build.partitions = no_ota.csv 또는 no_ota_spiffs.csv 와 유사한 파일일 수 있습니다.
; PlatformIO가 이 SPIFFS 공간에 LittleFS 이미지를 올리도록 시도합니다.
; 가장 확실한 방법은 LittleFS를 명시적으로 지원하는 파_티션_테이블을 사용하는 것입니다.
; ESP32 Arduino Core 3.x.x 버전에서는 기본 파티션 구성에서 LittleFS를 잘 지원하는 편입니다.
; 일단 이 라인은 주석 처리하거나 비워두고, 코드에서 LittleFS.format()을 사용하는 방식으로 진행해봅니다.
; ; board_build.partitions = default_littlefs.csv 

; --- 빌드 플래그 (선택 사항) ---
; build_flags =
;   -DCORE_DEBUG_LEVEL=5 ; 디버그 레벨 설정 (0-5)

; --- 업로드 포트 (선택 사항) ---
; PlatformIO가 자동으로 포트를 감지하지만, 문제가 있다면 수동으로 지정할 수 있습니다.
; upload_port = COM4 ; 또는 /dev/ttyUSB0 등
; monitor_port = COM4